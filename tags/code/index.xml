<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>code on Raghavendra Kaushik</title><link>https://rakaar.github.io/tags/code/</link><description>Recent content in code on Raghavendra Kaushik</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 23 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://rakaar.github.io/tags/code/index.xml" rel="self" type="application/rss+xml"/><item><title>Parsing HTTP response in Golang</title><link>https://rakaar.github.io/posts/2021-04-23-go-json-res-parse/</link><pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate><guid>https://rakaar.github.io/posts/2021-04-23-go-json-res-parse/</guid><description>Recently, while writing some code in Golang, I had to make HTTP requests and use the response. The response obtained is a string and it needs to parsed, which was kind of frustrating process(it is really smooth in other languages like JS and Python). Many sources suggest to define a struct and Parse, which is actually a good way. But I wish to write less for sake of simplicity. So in this post, I attempt to parse the different cases of JSON response with less lines of code, though it is not a recommended way!</description></item></channel></rss>