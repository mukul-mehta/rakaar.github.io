<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>threads on Raghavendra Kaushik</title><link>https://rakaar.github.io/tags/threads/</link><description>Recent content in threads on Raghavendra Kaushik</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 20 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://rakaar.github.io/tags/threads/index.xml" rel="self" type="application/rss+xml"/><item><title>Race Condition by example</title><link>https://rakaar.github.io/posts/2020-04-20-race-condition-by-example/</link><pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate><guid>https://rakaar.github.io/posts/2020-04-20-race-condition-by-example/</guid><description>Consider the following code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;pthread.h&amp;gt; #define NUM_THREADS 4 void *threadFunc(void *pArg) { /* thread main */ int *p = (int*)pArg; int myNum = *p; printf(&amp;#34;Thread number %d\n&amp;#34;, myNum); return 0; } int main(void) { int i; pthread_t tid[NUM_THREADS]; for(i = 0; i &amp;lt; NUM_THREADS; i++) { /* create/fork threads */ pthread_create(&amp;amp;tid[i], NULL, threadFunc, &amp;amp;i); } for(i = 0; i &amp;lt; NUM_THREADS; i++) { /* wait/join threads */ pthread_join(tid[i], NULL); } return 0; } In the above example, one would normally expect that the output of the program would be</description></item></channel></rss>